<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_LeftLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>